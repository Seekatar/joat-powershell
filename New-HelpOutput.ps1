<#
.Synopsis
    Generate content for README.md with synopses of PS functions

.Outputs
    Markdown
#>
[CmdletBinding()]
param(
[string[]] $FolderExcludes,
[switch] $Recurse
)
"# Command Synopses"
"Generated by New-HelpOutput.ps1 on $(Get-Date)"

$progressActivity = "Generating Help"

function doModule( $moduleName )
{
    Write-Verbose $moduleName
    Write-Progress -Activity $progressActivity -CurrentOperation $moduleName
    $module = Import-Module $moduleName -PassThru -Force
    @"
## $($module.Name) Module
``````PowerShell
Import-Module $_
``````

Command     | Synopsis
------------|---------|
"@
    Get-Command -Module $module | ForEach-Object {
        $help = Get-help $_ | Where-Object ModuleName -eq $module 
        $desc = "";
        if ( $help -and $help.synopsis )
        {
          $desc = $help.synopsis.trim()
        }
        "$($_.name) | $desc"
    }
    Remove-Module $module

}

function doLooseFiles( $folderName )
{
    $files = Get-ChildItem *-*.ps1 
    if ( -not $files )
    {
        return
    }
@"
## Files in $folderName
``````PowerShell
Set-Location $PWD
``````
Command     | Synopsis
------------|---------|
"@

    Get-ChildItem *-*.ps1 | ForEach-Object {
        $help = Get-help $_
        ".\$(Split-Path $_.Name -Leaf) | $($help.synopsis.trim())"
    }
}

function doFolder( $folder, $Recurse )
{
  Push-Location $_
  Write-Progress -Activity $progressActivity -Status $_
  
  $module = Get-Item *.psm1
  if ( $module )
  {
    Write-Progress -Activity $progressActivity -Status "$_ - $module"
    $module | ForEach-Object { doModule $_ }
  } 
  else
  {
      doLooseFiles $_
      if ( $Recurse )
      {
        Get-ChildItem -Directory | Where-Object name -notin $FolderExcludes | ForEach-Object {
          doFolder $_ $Recurse
        }
      }
  }
  Pop-Location
}

if ( "." -notin $FolderExcludes )
{
  doLooseFiles $PWD
}

Get-ChildItem -Directory | Where-Object name -notin $FolderExcludes | ForEach-Object {
    doFolder $_ $Recurse
}

Write-Progress $progressActivity -Completed
